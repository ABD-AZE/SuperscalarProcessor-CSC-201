$date
	Sat Nov  9 17:42:27 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module alu_tb $end
$var wire 16 ! aluresult [15:0] $end
$var reg 13 " alusignals [12:0] $end
$var reg 1 # clk $end
$var reg 5 $ immx [4:0] $end
$var reg 1 % isimmediate $end
$var reg 16 & op1 [15:0] $end
$var reg 16 ' op2 [15:0] $end
$scope module uut $end
$var wire 16 ( aluresult [15:0] $end
$var wire 13 ) alusignals [12:0] $end
$var wire 1 # clk $end
$var wire 5 * immx [4:0] $end
$var wire 1 % isimmediate $end
$var wire 16 + op1 [15:0] $end
$var wire 16 , op2 [15:0] $end
$var wire 1 - isxor $end
$var wire 1 . issub $end
$var wire 1 / isst $end
$var wire 1 0 isor $end
$var wire 1 1 isnot $end
$var wire 1 2 ismul $end
$var wire 1 3 ismov $end
$var wire 1 4 islsr $end
$var wire 1 5 islsl $end
$var wire 1 6 isld $end
$var wire 1 7 iscmp $end
$var wire 1 8 isand $end
$var wire 1 9 isadd $end
$var reg 16 : A [15:0] $end
$var reg 16 ; B [15:0] $end
$var reg 16 < result [15:0] $end
$var integer 32 = file [31:0] $end
$var integer 32 > i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx >
bx =
b0 <
b11 ;
b101 :
09
08
07
06
05
04
03
02
01
00
0/
0.
0-
b11 ,
b101 +
b11 *
b0 )
b0 (
b11 '
b101 &
0%
b11 $
1#
b0 "
b0 !
$end
#5000
0#
#10000
b1000 !
b1000 (
b1000 <
19
1#
b1 "
b1 )
#15000
0#
#20000
b10 !
b10 (
b10 <
09
1.
1#
b1000 "
b1000 )
#25000
0#
#30000
b1111 !
b1111 (
b1111 <
0.
12
1#
b10000 "
b10000 )
#35000
0#
#40000
b11 !
b11 (
b11 <
02
13
1#
b1000000 "
b1000000 )
#45000
0#
#50000
b111 !
b111 (
b111 <
03
10
1#
b10000000 "
b10000000 )
#55000
0#
#60000
b1 !
b1 (
b1 <
00
18
1#
b100000000 "
b100000000 )
#65000
0#
#70000
b1111111111111010 !
b1111111111111010 (
b1111111111111010 <
08
11
1#
b1000000000 "
b1000000000 )
#75000
0#
#80000
1#
#85000
0#
#90000
b101000 !
b101000 (
b101000 <
01
15
1#
b10000000000 "
b10000000000 )
#95000
0#
#100000
b0 !
b0 (
b0 <
b1000 >
b10000000000000000000000000000011 =
17
05
1#
b100000 "
b100000 )
#105000
0#
#110000
b1 !
b1 (
b1 <
1#
