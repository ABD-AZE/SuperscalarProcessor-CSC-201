$date
	Sat Nov  9 02:42:30 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module alu_tb $end
$var wire 16 ! aluresult [15:0] $end
$var reg 13 " alusignals [12:0] $end
$var reg 1 # clk $end
$var reg 5 $ immx [4:0] $end
$var reg 1 % isimmediate $end
$var reg 16 & op1 [15:0] $end
$var reg 16 ' op2 [15:0] $end
$scope module uut $end
$var wire 16 ( A [15:0] $end
$var wire 13 ) alusignals [12:0] $end
$var wire 1 # clk $end
$var wire 5 * immx [4:0] $end
$var wire 1 % isimmediate $end
$var wire 16 + op1 [15:0] $end
$var wire 16 , op2 [15:0] $end
$var wire 1 - isxor $end
$var wire 1 . issub $end
$var wire 1 / isst $end
$var wire 1 0 isor $end
$var wire 1 1 isnot $end
$var wire 1 2 ismul $end
$var wire 1 3 ismov $end
$var wire 1 4 islsr $end
$var wire 1 5 islsl $end
$var wire 1 6 isld $end
$var wire 1 7 iscmp $end
$var wire 1 8 isand $end
$var wire 1 9 isadd $end
$var wire 16 : B [15:0] $end
$var reg 16 ; aluresult [15:0] $end
$var reg 16 < result [15:0] $end
$var integer 32 = file [31:0] $end
$var integer 32 > i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx >
bx =
bx <
bx ;
b11 :
09
08
07
06
05
04
03
02
01
00
0/
0.
0-
b11 ,
b101 +
b11 *
b0 )
b101 (
b11 '
b101 &
0%
b11 $
0#
b0 "
bx !
$end
#5000
b0 !
b0 ;
b0 <
1#
#10000
19
0#
b1 "
b1 )
#15000
b1000 !
b1000 ;
b1000 <
1#
#20000
09
1.
0#
b1000 "
b1000 )
#25000
b10 !
b10 ;
b10 <
1#
#30000
0.
12
0#
b10000 "
b10000 )
#35000
b1111 !
b1111 ;
b1111 <
1#
#40000
02
13
0#
b1000000 "
b1000000 )
#45000
b11 !
b11 ;
b11 <
1#
#50000
03
10
0#
b10000000 "
b10000000 )
#55000
b111 !
b111 ;
b111 <
1#
#60000
00
18
0#
b100000000 "
b100000000 )
#65000
b1 !
b1 ;
b1 <
1#
#70000
08
11
0#
b1000000000 "
b1000000000 )
#75000
b1111111111111010 !
b1111111111111010 ;
b1111111111111010 <
1#
#80000
0#
#85000
1#
#90000
01
15
0#
b10000000000 "
b10000000000 )
#95000
b101000 !
b101000 ;
b101000 <
1#
#100000
b1000 >
b10000000000000000000000000000011 =
17
05
0#
b100000 "
b100000 )
#105000
b0 !
b0 ;
b1000 >
b0 <
1#
#110000
0#
