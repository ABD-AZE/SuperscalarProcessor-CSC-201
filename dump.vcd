$date
	Tue Nov 26 15:00:12 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module Top_tb $end
$scope module top_module $end
$var wire 16 ! branchpc [15:0] $end
$var wire 1 " clk $end
$var wire 1 # is_branch_taken $end
$var wire 1 $ reset $end
$var wire 1 % stall $end
$var wire 128 & regvalwb [127:0] $end
$var wire 20 ' rdvalmem2 [19:0] $end
$var wire 20 ( rdvalmem1 [19:0] $end
$var wire 4 ) opcode2 [3:0] $end
$var wire 4 * opcode1 [3:0] $end
$var wire 16 + op22alu2 [15:0] $end
$var wire 16 , op22 [15:0] $end
$var wire 16 - op21alu1 [15:0] $end
$var wire 16 . op21 [15:0] $end
$var wire 16 / op12 [15:0] $end
$var wire 16 0 op11 [15:0] $end
$var wire 16 1 ldresultwb [15:0] $end
$var wire 16 2 ldresult2 [15:0] $end
$var wire 16 3 ldresult1 [15:0] $end
$var wire 1 4 iswbwb $end
$var wire 1 5 iswbmem2 $end
$var wire 1 6 iswbmem1 $end
$var wire 1 7 iswbalu2 $end
$var wire 1 8 iswbalu1 $end
$var wire 1 9 iswb2 $end
$var wire 1 : iswb1 $end
$var wire 1 ; isubranch2 $end
$var wire 1 < isubranch1 $end
$var wire 1 = issub2 $end
$var wire 1 > issub1 $end
$var wire 1 ? isstalu2 $end
$var wire 1 @ isstalu1 $end
$var wire 1 A isstall $end
$var wire 1 B isst2 $end
$var wire 1 C isst1 $end
$var wire 1 D issingleinstr $end
$var wire 1 E isor2 $end
$var wire 1 F isor1 $end
$var wire 1 G isnot2 $end
$var wire 1 H isnot1 $end
$var wire 1 I ismul2 $end
$var wire 1 J ismul1 $end
$var wire 1 K ismov2 $end
$var wire 1 L ismov1 $end
$var wire 1 M islsr2 $end
$var wire 1 N islsr1 $end
$var wire 1 O islsl2 $end
$var wire 1 P islsl1 $end
$var wire 1 Q isldwb $end
$var wire 1 R isldmem2 $end
$var wire 1 S isldmem1 $end
$var wire 1 T isldalu2 $end
$var wire 1 U isldalu1 $end
$var wire 1 V isld2 $end
$var wire 1 W isld1 $end
$var wire 1 X iscmp2 $end
$var wire 1 Y iscmp1 $end
$var wire 1 Z isbgt2 $end
$var wire 1 [ isbgt1 $end
$var wire 1 \ isbeq2 $end
$var wire 1 ] isbeq1 $end
$var wire 1 ^ isand2 $end
$var wire 1 _ isand1 $end
$var wire 1 ` isadd2 $end
$var wire 1 a isadd1 $end
$var wire 1 b is_branch_taken2 $end
$var wire 1 c is_branch_taken1 $end
$var wire 16 d instrwb [15:0] $end
$var wire 16 e instrmemwb2 [15:0] $end
$var wire 16 f instrmemwb1 [15:0] $end
$var wire 16 g instrdecodealu2 [15:0] $end
$var wire 16 h instrdecodealu1 [15:0] $end
$var wire 16 i instralumem2 [15:0] $end
$var wire 16 j instralumem1 [15:0] $end
$var wire 16 k instr2relayerdecode [15:0] $end
$var wire 16 l instr2fetchrelayer [15:0] $end
$var wire 16 m instr1relayerdecode [15:0] $end
$var wire 16 n instr1fetchrelayer [15:0] $end
$var wire 1 o immflag1 $end
$var wire 1 p imm_flag2 $end
$var wire 5 q imm2 [4:0] $end
$var wire 5 r imm1 [4:0] $end
$var wire 16 s branchpc2 [15:0] $end
$var wire 16 t branchpc1 [15:0] $end
$var wire 16 u branch_target2 [15:0] $end
$var wire 16 v branch_target1 [15:0] $end
$var wire 16 w aluresultwb [15:0] $end
$var wire 16 x aluresultmem2 [15:0] $end
$var wire 16 y aluresultmem1 [15:0] $end
$var wire 16 z aluresult2 [15:0] $end
$var wire 16 { aluresult1 [15:0] $end
$var reg 16 | branchpc_reg [15:0] $end
$var reg 16 } branchtarget1_reg [15:0] $end
$var reg 16 ~ branchtarget2_reg [15:0] $end
$var reg 1 !" clk_reg $end
$var reg 128 "" regval [127:0] $end
$var reg 1 #" reset_reg $end
$scope module alu1 $end
$var wire 16 $" aluresult [15:0] $end
$var wire 12 %" alusignals [11:0] $end
$var wire 1 " clk $end
$var wire 16 &" instrout [15:0] $end
$var wire 1 '" is_branch_takenin $end
$var wire 1 U isld1 $end
$var wire 1 @ isst1 $end
$var wire 1 8 iswb_out $end
$var wire 16 (" op2_out [15:0] $end
$var wire 1 $ reset $end
$var wire 16 )" op2 [15:0] $end
$var wire 16 *" op1 [15:0] $end
$var wire 1 : iswb $end
$var wire 1 +" issub $end
$var wire 1 ," isst $end
$var wire 1 -" isor $end
$var wire 1 ." isnot $end
$var wire 1 /" ismul $end
$var wire 1 0" ismov $end
$var wire 1 1" islsr $end
$var wire 1 2" islsl $end
$var wire 1 3" isld $end
$var wire 1 o isimmediate $end
$var wire 1 4" iscmp $end
$var wire 1 5" isand $end
$var wire 1 6" isadd $end
$var wire 16 7" instrin [15:0] $end
$var wire 5 8" immx [4:0] $end
$var reg 16 9" A [15:0] $end
$var reg 16 :" B [15:0] $end
$var reg 5 ;" immx_reg [4:0] $end
$var reg 16 <" instrout_reg [15:0] $end
$var reg 16 =" instrout_reg1 [15:0] $end
$var reg 1 >" isadd_reg $end
$var reg 1 ?" isand_reg $end
$var reg 1 @" iscmp_reg $end
$var reg 1 A" isimmediate_reg $end
$var reg 1 B" isld1_1 $end
$var reg 1 C" isld_reg $end
$var reg 1 D" islsl_reg $end
$var reg 1 E" islsr_reg $end
$var reg 1 F" ismov_reg $end
$var reg 1 G" ismul_reg $end
$var reg 1 H" isnot_reg $end
$var reg 1 I" isor_reg $end
$var reg 1 J" isst1_1 $end
$var reg 1 K" isst_reg $end
$var reg 1 L" issub_reg $end
$var reg 1 M" iswb1_1 $end
$var reg 1 N" iswb1_reg $end
$var reg 16 O" op1_reg [15:0] $end
$var reg 16 P" op2_1 [15:0] $end
$var reg 16 Q" op2_reg [15:0] $end
$var reg 16 R" result [15:0] $end
$var reg 16 S" result_1 [15:0] $end
$upscope $end
$scope module alu2 $end
$var wire 16 T" aluresult [15:0] $end
$var wire 12 U" alusignals [11:0] $end
$var wire 1 " clk $end
$var wire 16 V" instrout [15:0] $end
$var wire 1 W" is_branch_takenin $end
$var wire 1 T isld1 $end
$var wire 1 ? isst1 $end
$var wire 1 7 iswb_out $end
$var wire 16 X" op2_out [15:0] $end
$var wire 1 $ reset $end
$var wire 16 Y" op2 [15:0] $end
$var wire 16 Z" op1 [15:0] $end
$var wire 1 9 iswb $end
$var wire 1 [" issub $end
$var wire 1 \" isst $end
$var wire 1 ]" isor $end
$var wire 1 ^" isnot $end
$var wire 1 _" ismul $end
$var wire 1 `" ismov $end
$var wire 1 a" islsr $end
$var wire 1 b" islsl $end
$var wire 1 c" isld $end
$var wire 1 p isimmediate $end
$var wire 1 d" iscmp $end
$var wire 1 e" isand $end
$var wire 1 f" isadd $end
$var wire 16 g" instrin [15:0] $end
$var wire 5 h" immx [4:0] $end
$var reg 16 i" A [15:0] $end
$var reg 16 j" B [15:0] $end
$var reg 5 k" immx_reg [4:0] $end
$var reg 16 l" instrout_reg [15:0] $end
$var reg 16 m" instrout_reg1 [15:0] $end
$var reg 1 n" isadd_reg $end
$var reg 1 o" isand_reg $end
$var reg 1 p" iscmp_reg $end
$var reg 1 q" isimmediate_reg $end
$var reg 1 r" isld1_1 $end
$var reg 1 s" isld_reg $end
$var reg 1 t" islsl_reg $end
$var reg 1 u" islsr_reg $end
$var reg 1 v" ismov_reg $end
$var reg 1 w" ismul_reg $end
$var reg 1 x" isnot_reg $end
$var reg 1 y" isor_reg $end
$var reg 1 z" isst1_1 $end
$var reg 1 {" isst_reg $end
$var reg 1 |" issub_reg $end
$var reg 1 }" iswb1_1 $end
$var reg 1 ~" iswb1_reg $end
$var reg 16 !# op1_reg [15:0] $end
$var reg 16 "# op2_1 [15:0] $end
$var reg 16 ## op2_reg [15:0] $end
$var reg 16 $# result [15:0] $end
$var reg 16 %# result_1 [15:0] $end
$upscope $end
$scope module control_unit1 $end
$var wire 1 " clk $end
$var wire 1 # is_branch_taken $end
$var wire 1 ] isbeq $end
$var wire 1 [ isbgt $end
$var wire 1 < isubranch $end
$var wire 1 : iswb $end
$var wire 1 $ reset $end
$var wire 1 % stall $end
$var wire 1 > issub $end
$var wire 1 C isst $end
$var wire 1 F isor $end
$var wire 1 H isnot $end
$var wire 1 J ismul $end
$var wire 1 L ismov $end
$var wire 1 N islsr $end
$var wire 1 P islsl $end
$var wire 1 W isld $end
$var wire 1 Y iscmp $end
$var wire 1 _ isand $end
$var wire 1 a isadd $end
$var wire 16 &# instr [15:0] $end
$var reg 1 a isadd_next $end
$var reg 1 '# isadd_reg $end
$var reg 1 _ isand_next $end
$var reg 1 (# isand_reg $end
$var reg 1 )# isbeq_next $end
$var reg 1 *# isbeq_reg $end
$var reg 1 +# isbgt_next $end
$var reg 1 ,# isbgt_reg $end
$var reg 1 Y iscmp_next $end
$var reg 1 -# iscmp_reg $end
$var reg 1 W isld_next $end
$var reg 1 .# isld_reg $end
$var reg 1 P islsl_next $end
$var reg 1 /# islsl_reg $end
$var reg 1 N islsr_next $end
$var reg 1 0# islsr_reg $end
$var reg 1 L ismov_next $end
$var reg 1 1# ismov_reg $end
$var reg 1 J ismul_next $end
$var reg 1 2# ismul_reg $end
$var reg 1 H isnot_next $end
$var reg 1 3# isnot_reg $end
$var reg 1 F isor_next $end
$var reg 1 4# isor_reg $end
$var reg 1 C isst_next $end
$var reg 1 5# isst_reg $end
$var reg 1 > issub_next $end
$var reg 1 6# issub_reg $end
$var reg 1 7# isubranch_next $end
$var reg 1 8# isubranch_reg $end
$var reg 1 9# iswb_next $end
$var reg 1 :# iswb_reg $end
$var reg 1 ;# stall_flag $end
$var reg 16 <# stalled_instr [15:0] $end
$upscope $end
$scope module control_unit2 $end
$var wire 1 " clk $end
$var wire 1 # is_branch_taken $end
$var wire 1 \ isbeq $end
$var wire 1 Z isbgt $end
$var wire 1 ; isubranch $end
$var wire 1 9 iswb $end
$var wire 1 $ reset $end
$var wire 1 % stall $end
$var wire 1 = issub $end
$var wire 1 B isst $end
$var wire 1 E isor $end
$var wire 1 G isnot $end
$var wire 1 I ismul $end
$var wire 1 K ismov $end
$var wire 1 M islsr $end
$var wire 1 O islsl $end
$var wire 1 V isld $end
$var wire 1 X iscmp $end
$var wire 1 ^ isand $end
$var wire 1 ` isadd $end
$var wire 16 =# instr [15:0] $end
$var reg 1 ` isadd_next $end
$var reg 1 ># isadd_reg $end
$var reg 1 ^ isand_next $end
$var reg 1 ?# isand_reg $end
$var reg 1 @# isbeq_next $end
$var reg 1 A# isbeq_reg $end
$var reg 1 B# isbgt_next $end
$var reg 1 C# isbgt_reg $end
$var reg 1 X iscmp_next $end
$var reg 1 D# iscmp_reg $end
$var reg 1 V isld_next $end
$var reg 1 E# isld_reg $end
$var reg 1 O islsl_next $end
$var reg 1 F# islsl_reg $end
$var reg 1 M islsr_next $end
$var reg 1 G# islsr_reg $end
$var reg 1 K ismov_next $end
$var reg 1 H# ismov_reg $end
$var reg 1 I ismul_next $end
$var reg 1 I# ismul_reg $end
$var reg 1 G isnot_next $end
$var reg 1 J# isnot_reg $end
$var reg 1 E isor_next $end
$var reg 1 K# isor_reg $end
$var reg 1 B isst_next $end
$var reg 1 L# isst_reg $end
$var reg 1 = issub_next $end
$var reg 1 M# issub_reg $end
$var reg 1 N# isubranch_next $end
$var reg 1 O# isubranch_reg $end
$var reg 1 P# iswb_next $end
$var reg 1 Q# iswb_reg $end
$var reg 1 R# stall_flag $end
$var reg 16 S# stalled_instr [15:0] $end
$upscope $end
$scope module decode_unit1 $end
$var wire 16 T# branch_target [15:0] $end
$var wire 1 " clk $end
$var wire 5 U# imm [4:0] $end
$var wire 1 o imm_flag $end
$var wire 16 V# instrout [15:0] $end
$var wire 1 # is_branch_taken $end
$var wire 16 W# op1 [15:0] $end
$var wire 16 X# op2 [15:0] $end
$var wire 4 Y# opcode [3:0] $end
$var wire 1 $ reset $end
$var wire 1 % stall $end
$var wire 20 Z# rdvalmem2 [19:0] $end
$var wire 20 [# rdvalmem1 [19:0] $end
$var wire 16 \# instr [15:0] $end
$var reg 16 ]# branch_target_next [15:0] $end
$var reg 16 ^# branch_target_reg [15:0] $end
$var reg 1 _# imm_flag_next $end
$var reg 1 `# imm_flag_reg $end
$var reg 5 a# imm_next [4:0] $end
$var reg 5 b# imm_reg [4:0] $end
$var reg 16 c# instrn [15:0] $end
$var reg 16 d# instrun [15:0] $end
$var reg 16 e# op1_next [15:0] $end
$var reg 16 f# op1_reg [15:0] $end
$var reg 16 g# op2_next [15:0] $end
$var reg 16 h# op2_reg [15:0] $end
$var reg 4 i# opcode_next [3:0] $end
$var reg 4 j# opcode_reg [3:0] $end
$var reg 3 k# rd [2:0] $end
$var reg 3 l# rs1 [2:0] $end
$var reg 3 m# rs2 [2:0] $end
$upscope $end
$scope module decode_unit2 $end
$var wire 16 n# branch_target [15:0] $end
$var wire 1 " clk $end
$var wire 5 o# imm [4:0] $end
$var wire 1 p imm_flag $end
$var wire 16 p# instrout [15:0] $end
$var wire 1 # is_branch_taken $end
$var wire 16 q# op1 [15:0] $end
$var wire 16 r# op2 [15:0] $end
$var wire 4 s# opcode [3:0] $end
$var wire 1 $ reset $end
$var wire 1 % stall $end
$var wire 20 t# rdvalmem2 [19:0] $end
$var wire 20 u# rdvalmem1 [19:0] $end
$var wire 16 v# instr [15:0] $end
$var reg 16 w# branch_target_next [15:0] $end
$var reg 16 x# branch_target_reg [15:0] $end
$var reg 1 y# imm_flag_next $end
$var reg 1 z# imm_flag_reg $end
$var reg 5 {# imm_next [4:0] $end
$var reg 5 |# imm_reg [4:0] $end
$var reg 16 }# instrn [15:0] $end
$var reg 16 ~# instrun [15:0] $end
$var reg 16 !$ op1_next [15:0] $end
$var reg 16 "$ op1_reg [15:0] $end
$var reg 16 #$ op2_next [15:0] $end
$var reg 16 $$ op2_reg [15:0] $end
$var reg 4 %$ opcode_next [3:0] $end
$var reg 4 &$ opcode_reg [3:0] $end
$var reg 3 '$ rd [2:0] $end
$var reg 3 ($ rs1 [2:0] $end
$var reg 3 )$ rs2 [2:0] $end
$upscope $end
$scope module execute2 $end
$var wire 16 *$ brachtarget [15:0] $end
$var wire 16 +$ branchpc [15:0] $end
$var wire 1 " clk $end
$var wire 1 \ isBeq $end
$var wire 1 Z isBgt $end
$var wire 1 ; isunconditionalbranch $end
$var wire 128 ,$ regval [127:0] $end
$var wire 1 $ reset $end
$var wire 1 b isbranchtaken $end
$var reg 16 -$ branchpc_reg [15:0] $end
$var reg 16 .$ branchpc_reg1 [15:0] $end
$var reg 1 b isbranchtaken_reg $end
$var reg 16 /$ isbranchtaken_reg1 [15:0] $end
$upscope $end
$scope module execute_unit1 $end
$var wire 16 0$ brachtarget [15:0] $end
$var wire 16 1$ branchpc [15:0] $end
$var wire 1 " clk $end
$var wire 1 ] isBeq $end
$var wire 1 [ isBgt $end
$var wire 1 < isunconditionalbranch $end
$var wire 128 2$ regval [127:0] $end
$var wire 1 $ reset $end
$var wire 1 c isbranchtaken $end
$var reg 16 3$ branchpc_reg [15:0] $end
$var reg 16 4$ branchpc_reg1 [15:0] $end
$var reg 1 c isbranchtaken_reg $end
$var reg 16 5$ isbranchtaken_reg1 [15:0] $end
$upscope $end
$scope module fetch_unit $end
$var wire 16 6$ branch_target [15:0] $end
$var wire 1 " clk $end
$var wire 16 7$ instr1 [15:0] $end
$var wire 16 8$ instr2 [15:0] $end
$var wire 1 # is_branch_taken $end
$var wire 1 $ reset $end
$var wire 1 A stall $end
$var wire 1 D issingleinstr $end
$var reg 16 9$ instr1_reg [15:0] $end
$var reg 16 :$ instr2_reg [15:0] $end
$var reg 16 ;$ pc [15:0] $end
$upscope $end
$scope module memory_unit1 $end
$var wire 16 <$ aluresult [15:0] $end
$var wire 16 =$ aluresult_out [15:0] $end
$var wire 1 " clk $end
$var wire 16 >$ instr [15:0] $end
$var wire 16 ?$ instr_out [15:0] $end
$var wire 1 U isld $end
$var wire 1 S isld_out $end
$var wire 1 @ isst $end
$var wire 1 8 iswb $end
$var wire 1 6 iswb_out $end
$var wire 16 @$ ldresult [15:0] $end
$var wire 16 A$ op2 [15:0] $end
$var wire 20 B$ rdvalmem [19:0] $end
$var wire 1 $ reset $end
$var reg 16 C$ aluresult_reg [15:0] $end
$var reg 16 D$ instr_1 [15:0] $end
$var reg 16 E$ instr_rd [15:0] $end
$var reg 1 F$ isld_1 $end
$var reg 1 G$ isld_reg $end
$var reg 1 H$ iswb_1 $end
$var reg 1 I$ iswb_reg $end
$var reg 16 J$ ld [15:0] $end
$var reg 16 K$ ld_reg [15:0] $end
$var reg 20 L$ rdval [19:0] $end
$var reg 20 M$ result [19:0] $end
$var integer 32 N$ file [31:0] $end
$var integer 32 O$ i [31:0] $end
$upscope $end
$scope module memory_unit2 $end
$var wire 16 P$ aluresult [15:0] $end
$var wire 16 Q$ aluresult_out [15:0] $end
$var wire 1 " clk $end
$var wire 16 R$ instr [15:0] $end
$var wire 16 S$ instr_out [15:0] $end
$var wire 1 T isld $end
$var wire 1 R isld_out $end
$var wire 1 ? isst $end
$var wire 1 7 iswb $end
$var wire 1 5 iswb_out $end
$var wire 16 T$ ldresult [15:0] $end
$var wire 16 U$ op2 [15:0] $end
$var wire 20 V$ rdvalmem [19:0] $end
$var wire 1 $ reset $end
$var reg 16 W$ aluresult_reg [15:0] $end
$var reg 16 X$ instr_1 [15:0] $end
$var reg 16 Y$ instr_rd [15:0] $end
$var reg 1 Z$ isld_1 $end
$var reg 1 [$ isld_reg $end
$var reg 1 \$ iswb_1 $end
$var reg 1 ]$ iswb_reg $end
$var reg 16 ^$ ld [15:0] $end
$var reg 16 _$ ld_reg [15:0] $end
$var reg 20 `$ rdval [19:0] $end
$var reg 20 a$ result [19:0] $end
$var integer 32 b$ file [31:0] $end
$var integer 32 c$ i [31:0] $end
$upscope $end
$scope module relayer_unit $end
$var wire 16 d$ buffer11 [15:0] $end
$var wire 16 e$ buffer12 [15:0] $end
$var wire 16 f$ buffer21 [15:0] $end
$var wire 16 g$ buffer22 [15:0] $end
$var wire 16 h$ instr1_in [15:0] $end
$var wire 16 i$ instr1_o [15:0] $end
$var wire 16 j$ instr2_in [15:0] $end
$var wire 16 k$ instr2_o [15:0] $end
$var wire 1 D issingleinstr $end
$var wire 1 A isstall $end
$var reg 1 l$ check $end
$var reg 16 m$ instr1 [15:0] $end
$var reg 16 n$ instr1_out [15:0] $end
$var reg 16 o$ instr2 [15:0] $end
$var reg 16 p$ instr2_out [15:0] $end
$var reg 1 q$ issingleinstr_reg $end
$var reg 1 r$ isstall_reg $end
$var reg 16 s$ singinstr [15:0] $end
$var reg 16 t$ tempinstr1 [15:0] $end
$var reg 16 u$ tempinstr2 [15:0] $end
$var integer 32 v$ i [31:0] $end
$var integer 32 w$ p [31:0] $end
$upscope $end
$scope module writeback_unit1 $end
$var wire 16 x$ aluresult [15:0] $end
$var wire 16 y$ aluresultmem2 [15:0] $end
$var wire 16 z$ aluresultwb [15:0] $end
$var wire 1 " clk $end
$var wire 16 {$ instr [15:0] $end
$var wire 16 |$ instrmemwb2 [15:0] $end
$var wire 16 }$ instrwb [15:0] $end
$var wire 1 S isld $end
$var wire 1 R isldmem2 $end
$var wire 1 Q isldwb $end
$var wire 1 6 iswb $end
$var wire 1 5 iswbin2 $end
$var wire 1 4 iswbwb $end
$var wire 16 ~$ ldresult [15:0] $end
$var wire 16 !% ldresult2 [15:0] $end
$var wire 16 "% ldresultwb [15:0] $end
$var wire 128 #% regvalwb [127:0] $end
$var reg 16 $% aluresultwb_reg [15:0] $end
$var reg 16 %% instrwb_reg [15:0] $end
$var reg 1 &% isldwb_reg $end
$var reg 1 '% iswbwb_reg $end
$var reg 16 (% ldresultwb_reg [15:0] $end
$var reg 128 )% regval_reg [127:0] $end
$var reg 16 *% result [15:0] $end
$var integer 32 +% file [31:0] $end
$var integer 32 ,% i [31:0] $end
$upscope $end
$scope module writeback_unit2 $end
$var wire 16 -% aluresult [15:0] $end
$var wire 1 " clk $end
$var wire 16 .% instr [15:0] $end
$var wire 1 Q isld $end
$var wire 1 4 iswb $end
$var wire 16 /% ldresult [15:0] $end
$var wire 128 0% regvalwb [127:0] $end
$var reg 16 1% result [15:0] $end
$var integer 32 2% file [31:0] $end
$var integer 32 3% i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 3%
bx 2%
bx 1%
bx 0%
b0 /%
b0 .%
b0 -%
bx ,%
bx +%
b0 *%
bx )%
b0 (%
0'%
0&%
b0 %%
b0 $%
bx #%
b0 "%
b0 !%
b0 ~$
b0 }$
b0 |$
b0 {$
b0 z$
b0 y$
b0 x$
b0 w$
b10 v$
b0 u$
b0 t$
b0 s$
0r$
0q$
b0 p$
b0 o$
b0 n$
b0 m$
0l$
b0 k$
b0 j$
b0 i$
b0 h$
b0 g$
b0 f$
b0 e$
b0 d$
bx c$
bx b$
b0 a$
b0 `$
b0 _$
b0 ^$
0]$
x\$
0[$
xZ$
b0 Y$
bx X$
b0 W$
b0 V$
b0 U$
b0 T$
b0 S$
b0 R$
b0 Q$
b0 P$
bx O$
bx N$
b0 M$
b0 L$
b0 K$
b0 J$
0I$
xH$
0G$
xF$
b0 E$
bx D$
b0 C$
b0 B$
b0 A$
b0 @$
b0 ?$
b0 >$
b0 =$
b0 <$
b0 ;$
b0 :$
b0 9$
b0 8$
b0 7$
b0 6$
bx 5$
bx 4$
b0 3$
bx 2$
b0 1$
b0 0$
bx /$
bx .$
b0 -$
bx ,$
b0 +$
b0 *$
bx )$
bx ($
bx '$
bx &$
b0 %$
bx $$
b0 #$
bx "$
b0 !$
b0 ~#
bx }#
bx |#
b0 {#
xz#
0y#
bx x#
b0 w#
b0 v#
b0 u#
b0 t#
b0 s#
b0 r#
b0 q#
b0 p#
b0 o#
b0 n#
bx m#
bx l#
bx k#
bx j#
b0 i#
bx h#
b0 g#
bx f#
b0 e#
b0 d#
bx c#
bx b#
b0 a#
x`#
0_#
bx ^#
b0 ]#
b0 \#
b0 [#
b0 Z#
b0 Y#
b0 X#
b0 W#
b0 V#
b0 U#
b0 T#
bx S#
xR#
0Q#
0P#
0O#
0N#
0M#
0L#
0K#
0J#
0I#
0H#
0G#
0F#
0E#
0D#
0C#
0B#
0A#
0@#
0?#
0>#
b0 =#
bx <#
x;#
0:#
09#
08#
07#
06#
05#
04#
03#
02#
01#
00#
0/#
0.#
0-#
0,#
0+#
0*#
0)#
0(#
0'#
b0 &#
bx %#
b0 $#
b0 ##
bx "#
b0 !#
x~"
x}"
0|"
0{"
xz"
0y"
0x"
0w"
0v"
0u"
0t"
0s"
xr"
0q"
0p"
0o"
0n"
b0 m"
b0 l"
b0 k"
bx j"
bx i"
b0 h"
b0 g"
0f"
0e"
0d"
0c"
0b"
0a"
0`"
0_"
0^"
0]"
0\"
0["
b0 Z"
b0 Y"
b0 X"
0W"
b0 V"
b0 U"
b0 T"
bx S"
b0 R"
b0 Q"
bx P"
b0 O"
xN"
xM"
0L"
0K"
xJ"
0I"
0H"
0G"
0F"
0E"
0D"
0C"
xB"
0A"
0@"
0?"
0>"
b0 ="
b0 <"
b0 ;"
bx :"
bx 9"
b0 8"
b0 7"
06"
05"
04"
03"
02"
01"
00"
0/"
0."
0-"
0,"
0+"
b0 *"
b0 )"
b0 ("
0'"
b0 &"
b0 %"
b0 $"
1#"
bx ""
0!"
b0 ~
b0 }
b0 |
b0 {
b0 z
b0 y
b0 x
b0 w
b0 v
b0 u
b0 t
b0 s
b0 r
b0 q
0p
0o
b0 n
b0 m
b0 l
b0 k
b0 j
b0 i
b0 h
b0 g
b0 f
b0 e
b0 d
0c
0b
0a
0`
0_
0^
0]
0\
0[
0Z
0Y
0X
0W
0V
0U
0T
0S
0R
0Q
0P
0O
0N
0M
0L
0K
0J
0I
0H
0G
0F
0E
0D
0C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
x8
x7
06
05
04
b0 3
b0 2
b0 1
b0 0
b0 /
b0 .
b0 -
b0 ,
b0 +
b0 *
b0 )
b0 (
b0 '
bx &
z%
1$
0#
0"
b0 !
$end
#10
0$
0#"
#15
b0 5$
b0 4$
08
0N"
0J"
0B"
b0 P"
b0 S"
b0 D$
0H$
x6
xI$
xS
xG$
0F$
b0 /$
b0 .$
07
0~"
0z"
0r"
b0 "#
b0 %#
b0 X$
0\$
x5
x]$
xR
x[$
0Z$
b0 }#
0z#
b0 $$
b0 "$
b0 x#
b0 |#
b0 &$
b0 c#
0`#
b0 h#
b0 f#
b0 ^#
b0 b#
b0 j#
b10001110110000 f$
b1000100101000 d$
b10001110110000 k
b10001110110000 =#
b10001110110000 v#
b10001110110000 k$
b10001110110000 p$
b1000100101000 m
b1000100101000 &#
b1000100101000 \#
b1000100101000 i$
b1000100101000 n$
b10 v$
b10001110110000 o$
b1000100101000 m$
b0 :"
b0 9"
b1110000000000000110000000000000010100000000000001000000000000000011000000000000001000000000000000010000000000000000 &
b1110000000000000110000000000000010100000000000001000000000000000011000000000000001000000000000000010000000000000000 #%
b1110000000000000110000000000000010100000000000001000000000000000011000000000000001000000000000000010000000000000000 0%
b1110000000000000110000000000000010100000000000001000000000000000011000000000000001000000000000000010000000000000000 )%
b0 j"
b0 i"
b1110000000000000110000000000000010100000000000001000000000000000011000000000000001000000000000000010000000000000000 ""
b1110000000000000110000000000000010100000000000001000000000000000011000000000000001000000000000000010000000000000000 ,$
b1110000000000000110000000000000010100000000000001000000000000000011000000000000001000000000000000010000000000000000 2$
b0 )$
b0 ($
b0 '$
b0 m#
b0 l#
b0 k#
b10001110110000 l
b10001110110000 8$
b10001110110000 j$
b10001110110000 :$
b1000100101000 n
b1000100101000 7$
b1000100101000 h$
b1000100101000 9$
b10 ;$
1"
1!"
#20
0"
0!"
#25
16"
b1110110000 ~
b100101000 }
1["
x\$
05
0]$
0R
0[$
0}"
xQ
x&%
x4
x'%
xH$
06
0I$
0S
0G$
0M"
b1000100101000 h
b1000100101000 7"
b1000100101000 V#
b1000100101000 d#
b100101000 v
b100101000 T#
b100101000 0$
b100101000 ]#
b1000 r
b1000 8"
b1000 U#
b1000 a#
b1 *
b1 Y#
b1 i#
b10 .
b10 )"
b10 X#
b10 g#
b1 0
b1 *"
b1 W#
b1 e#
1:
19#
b1 %"
1a
b10001110110000 g
b10001110110000 g"
b10001110110000 p#
b10001110110000 ~#
b1110110000 u
b1110110000 n#
b1110110000 *$
b1110110000 w#
b10000 q
b10000 h"
b10000 o#
b10000 {#
b10 )
b10 s#
b10 %$
b100 ,
b100 Y"
b100 r#
b100 #$
b101 /
b101 Z"
b101 q#
b101 !$
19
1P#
b1000 U"
1=
b10001011010000 f$
b1100100000000101 d$
b10001110110000 g$
b1000100101000 e$
b10001011010000 k
b10001011010000 =#
b10001011010000 v#
b10001011010000 k$
b10001011010000 p$
b1100100000000101 m
b1100100000000101 &#
b1100100000000101 \#
b1100100000000101 i$
b1100100000000101 n$
b10 v$
b10001011010000 o$
b1100100000000101 m$
b10001011010000 l
b10001011010000 8$
b10001011010000 j$
b10001011010000 :$
b1100100000000101 n
b1100100000000101 7$
b1100100000000101 h$
b1100100000000101 9$
b100 ;$
b10 m#
b1 l#
b1 k#
b100 )$
b101 ($
b11 '$
1"
1!"
#30
0"
0!"
#35
06"
b1011010000 ~
b101 }
18
1N"
b10 -
b10 ("
b10 A$
b10 Q"
b1000100101000 j
b1000100101000 &"
b1000100101000 >$
b1000100101000 <"
b11 {
b11 $"
b11 <$
b11 R"
0H$
0Q
0&%
04
0'%
17
1~"
b100 +
b100 X"
b100 U$
b100 ##
b10001110110000 i
b10001110110000 V"
b10001110110000 R$
b10001110110000 l"
b1 z
b1 T"
b1 P$
b1 $#
0\$
1Q#
1M#
19
1P#
b1000 U"
1=
b10001110110000 }#
b100 $$
b101 "$
b1110110000 x#
b10000 |#
b10 &$
b10001011010000 g
b10001011010000 g"
b10001011010000 p#
b10001011010000 ~#
b1011010000 u
b1011010000 n#
b1011010000 *$
b1011010000 w#
b110 /
b110 Z"
b110 q#
b110 !$
1:#
1'#
1<
17#
0:
09#
b0 %"
0a
b1000100101000 c#
b10 h#
b1 f#
b100101000 ^#
b1000 b#
b1 j#
b1100100000000101 h
b1100100000000101 7"
b1100100000000101 V#
b1100100000000101 d#
b101 v
b101 T#
b101 0$
b101 ]#
b101 r
b101 8"
b101 U#
b101 a#
1o
1_#
b1100 *
b1100 Y#
b1100 i#
b101 .
b101 )"
b101 X#
b101 g#
b0 0
b0 *"
b0 W#
b0 e#
b11001010010000 f$
b1111111100100 d$
b10001011010000 g$
b1100100000000101 e$
b11001010010000 k
b11001010010000 =#
b11001010010000 v#
b11001010010000 k$
b11001010010000 p$
b1111111100100 m
b1111111100100 &#
b1111111100100 \#
b1111111100100 i$
b1111111100100 n$
b10 v$
b11001010010000 o$
b1111111100100 m$
b10 :"
b1 9"
b100 j"
b101 i"
b110 ($
b10 '$
b1 m#
b0 l#
b0 k#
b11001010010000 l
b11001010010000 8$
b11001010010000 j$
b11001010010000 :$
b1111111100100 n
b1111111100100 7$
b1111111100100 h$
b1111111100100 9$
b110 ;$
1"
1!"
#40
0"
0!"
#45
1#
16"
b101 !
b101 6$
b101 |
b1010010000 ~
b11111100100 }
1_"
0["
b10001110110000 e
b10001110110000 S$
b10001110110000 |$
b10001110110000 Y$
15
1]$
b1 x
b1 Q$
b1 y$
b1 W$
b1100000000000000010 '
b1100000000000000010 Z#
b1100000000000000010 t#
b1100000000000000010 V$
b1100000000000000010 a$
1}"
b100 "#
b1 %#
b10001110110000 m"
b10001011010000 i
b10001011010000 V"
b10001011010000 R$
b10001011010000 l"
b10 z
b10 T"
b10 P$
b10 $#
b1000100101000 f
b1000100101000 ?$
b1000100101000 {$
b1000100101000 E$
16
1I$
b11 y
b11 =$
b11 x$
b11 C$
b100000000000000110 (
b100000000000000110 [#
b100000000000000110 u#
b100000000000000110 B$
b100000000000000110 M$
1M"
08
0N"
b10 P"
b101 -
b101 ("
b101 A$
b101 Q"
b11 S"
b1000100101000 ="
b1100100000000101 j
b1100100000000101 &"
b1100100000000101 >$
b1100100000000101 <"
b0 {
b0 $"
b0 <$
b0 R"
1c
b101 t
b101 1$
b101 3$
b1100100000000101 c#
1`#
b101 h#
b0 f#
b101 ^#
b101 b#
b1100 j#
b1111111100100 h
b1111111100100 7"
b1111111100100 V#
b1111111100100 d#
b11111100100 v
b11111100100 T#
b11111100100 0$
b11111100100 ]#
b100 r
b100 8"
b100 U#
b100 a#
b1 *
b1 Y#
b1 i#
b100 .
b100 )"
b100 X#
b100 g#
b111 0
b111 *"
b111 W#
b111 e#
18#
0:#
0'#
1:
19#
b1 %"
1a
0<
07#
b10001011010000 }#
b110 "$
b1011010000 x#
b11001010010000 g
b11001010010000 g"
b11001010010000 p#
b11001010010000 ~#
b1010010000 u
b1010010000 n#
b1010010000 *$
b1010010000 w#
b11 )
b11 s#
b11 %$
b100 /
b100 Z"
b100 q#
b100 !$
1I
19
1P#
b10000 U"
0=
b1110110100001 f$
b1000111011010001 d$
b11001010010000 g$
b1111111100100 e$
b1110110100001 k
b1110110100001 =#
b1110110100001 v#
b1110110100001 k$
b1110110100001 p$
b1000111011010001 m
b1000111011010001 &#
b1000111011010001 \#
b1000111011010001 i$
b1000111011010001 n$
b10 v$
b1110110100001 o$
b1000111011010001 m$
b110 i"
b101 :"
b0 9"
b1110110100001 l
b1110110100001 8$
b1110110100001 j$
b1110110100001 :$
b1000111011010001 n
b1000111011010001 7$
b1000111011010001 h$
b1000111011010001 9$
b1000 ;$
b111 l#
b111 k#
b100 ($
1"
1!"
#50
0"
0!"
#55
0#
b1000 3%
b10000000000000000000000000000011 2%
b1 1%
b0 !
b0 6$
b0 |
b0 ~
b0 }
b1 5$
b101 4$
0c
b0 t
b0 1$
b0 3$
0M"
b101 P"
b100 -
b100 ("
b100 A$
b100 Q"
b0 S"
b1100100000000101 ="
b1111111100100 j
b1111111100100 &"
b1111111100100 >$
b1111111100100 <"
b1011 {
b1011 $"
b1011 <$
b1011 R"
b1000100101000 D$
b1100100000000101 f
b1100100000000101 ?$
b1100100000000101 {$
b1100100000000101 E$
1H$
06
0I$
b100000000000000110 L$
b0 y
b0 =$
b0 x$
b0 C$
b0 (
b0 [#
b0 u#
b0 B$
b0 M$
b1 w
b1 z$
b1 -%
b1 $%
b10001110110000 d
b10001110110000 }$
b10001110110000 .%
b10001110110000 %%
14
1'%
07
0~"
b10 %#
b10001011010000 m"
b11001010010000 i
b11001010010000 V"
b11001010010000 R$
b11001010010000 l"
b10000 z
b10000 T"
b10000 P$
b10000 $#
b10001110110000 X$
b10001011010000 e
b10001011010000 S$
b10001011010000 |$
b10001011010000 Y$
1\$
b1100000000000000010 `$
b10 x
b10 Q$
b10 y$
b10 W$
b1000000000000000100 '
b1000000000000000100 Z#
b1000000000000000100 t#
b1000000000000000100 V$
b1000000000000000100 a$
0Q#
0M#
b11001010010000 }#
b100 "$
b1010010000 x#
b11 &$
b0 g
b0 g"
b0 p#
b0 ~#
b0 u
b0 n#
b0 *$
b0 w#
b0 ,
b0 Y"
b0 r#
b0 #$
b0 /
b0 Z"
b0 q#
b0 !$
b0 q
b0 h"
b0 o#
b0 {#
b0 )
b0 s#
b0 %$
08#
b1111111100100 c#
b100 h#
b111 f#
b11111100100 ^#
b100 b#
b1 j#
b0 h
b0 7"
b0 V#
b0 d#
b0 v
b0 T#
b0 0$
b0 ]#
b0 .
b0 )"
b0 X#
b0 g#
b0 0
b0 *"
b0 W#
b0 e#
0o
0_#
b0 r
b0 8"
b0 U#
b0 a#
b0 *
b0 Y#
b0 i#
0_"
06"
b0 f$
b0 d$
b1110110100001 g$
b1000111011010001 e$
b10 v$
b0 k
b0 =#
b0 v#
b0 k$
b0 p$
b0 m
b0 &#
b0 \#
b0 i$
b0 n$
b0 o$
b0 m$
b100 :"
b111 9"
b1110000000000000110000000000000010100000000000001000000000000000011000000000000001000000000000000110000000000000000 &
b1110000000000000110000000000000010100000000000001000000000000000011000000000000001000000000000000110000000000000000 #%
b1110000000000000110000000000000010100000000000001000000000000000011000000000000001000000000000000110000000000000000 0%
b1110000000000000110000000000000010100000000000001000000000000000011000000000000001000000000000000110000000000000000 )%
b1000 ,%
b10000000000000000000000000000011 +%
b11 *%
b100 i"
09
0P#
b0 U"
0I
0:
09#
b0 %"
0a
b0 l
b0 8$
b0 j$
b0 :$
b0 n
b0 7$
b0 h$
b0 9$
b101 ;$
1"
1!"
#60
0"
0!"
#65
b10 1%
b10001011010000 X$
b11001010010000 e
b11001010010000 S$
b11001010010000 |$
b11001010010000 Y$
05
0]$
b1000000000000000100 `$
b10000 x
b10000 Q$
b10000 y$
b10000 W$
b1000000000000100000 '
b1000000000000100000 Z#
b1000000000000100000 t#
b1000000000000100000 V$
b1000000000000100000 a$
0}"
b0 +
b0 X"
b0 U$
b0 ##
b10000 %#
b11001010010000 m"
b0 i
b0 V"
b0 R$
b0 l"
b0 z
b0 T"
b0 P$
b0 $#
b10 w
b10 z$
b10 -%
b10 $%
b10001011010000 d
b10001011010000 }$
b10001011010000 .%
b10001011010000 %%
b1100100000000101 D$
b1111111100100 f
b1111111100100 ?$
b1111111100100 {$
b1111111100100 E$
0H$
b0 L$
b1011 y
b1011 =$
b1011 x$
b1011 C$
b11100000000000010110 (
b11100000000000010110 [#
b11100000000000010110 u#
b11100000000000010110 B$
b11100000000000010110 M$
b100 P"
b0 -
b0 ("
b0 A$
b0 Q"
b1011 S"
b1111111100100 ="
b0 j
b0 &"
b0 >$
b0 <"
b0 {
b0 $"
b0 <$
b0 R"
b0 5$
b0 4$
b0 c#
0`#
b0 h#
b0 f#
b0 ^#
b0 b#
b0 j#
b0 }#
b0 $$
b0 "$
b0 x#
b0 |#
b0 &$
b1000 3%
1D
1q$
b1000111011010001 s$
b11001010010000 d$
b0 g$
b0 e$
b1 w$
b11001010010000 m
b11001010010000 &#
b11001010010000 \#
b11001010010000 i$
b11001010010000 n$
b10 v$
b1000111011010001 o$
b11001010010000 m$
b1110000000000000110000000000000010100000000000001000000000000000001000000000000001000000000000000110000000000000000 ""
b1110000000000000110000000000000010100000000000001000000000000000001000000000000001000000000000000110000000000000000 ,$
b1110000000000000110000000000000010100000000000001000000000000000001000000000000001000000000000000110000000000000000 2$
b0 j"
b0 i"
b1110000000000000110000000000000010100000000000001000000000000000001000000000000001000000000000000110000000000000000 &
b1110000000000000110000000000000010100000000000001000000000000000001000000000000001000000000000000110000000000000000 #%
b1110000000000000110000000000000010100000000000001000000000000000001000000000000001000000000000000110000000000000000 0%
b1110000000000000110000000000000010100000000000001000000000000000001000000000000001000000000000000110000000000000000 )%
b0 :"
b0 9"
b1000111011010001 l
b1000111011010001 8$
b1000111011010001 j$
b1000111011010001 :$
b11001010010000 n
b11001010010000 7$
b11001010010000 h$
b11001010010000 9$
b111 ;$
b0 m#
b0 l#
b0 k#
b0 )$
b0 ($
b0 '$
1"
1!"
#70
0"
0!"
#75
1/"
b1010010000 }
b0 P"
b0 S"
b0 ="
b1111111100100 D$
b0 f
b0 ?$
b0 {$
b0 E$
b11100000000000010110 L$
b0 y
b0 =$
b0 x$
b0 C$
b0 (
b0 [#
b0 u#
b0 B$
b0 M$
b10000 w
b10000 z$
b10000 -%
b10000 $%
b11001010010000 d
b11001010010000 }$
b11001010010000 .%
b11001010010000 %%
04
0'%
b0 "#
b0 %#
b0 m"
b11001010010000 X$
b0 e
b0 S$
b0 |$
b0 Y$
0\$
b1000000000000100000 `$
b0 x
b0 Q$
b0 y$
b0 W$
b0 '
b0 Z#
b0 t#
b0 V$
b0 a$
b1000000000000100 ,
b1000000000000100 Y"
b1000000000000100 r#
b1000000000000100 #$
b1000000000000100 /
b1000000000000100 Z"
b1000000000000100 q#
b1000000000000100 !$
1:
19#
b10000 %"
1J
b11001010010000 h
b11001010010000 7"
b11001010010000 V#
b11001010010000 d#
b1010010000 v
b1010010000 T#
b1010010000 0$
b1010010000 ]#
b10000 r
b10000 8"
b10000 U#
b10000 a#
b11 *
b11 Y#
b11 i#
b100 .
b100 )"
b100 X#
b100 g#
b100 0
b100 *"
b100 W#
b100 e#
0D
0q$
b1110110100001 f$
b1000111011010001 d$
b11001010010000 e$
b1110110100001 k
b1110110100001 =#
b1110110100001 v#
b1110110100001 k$
b1110110100001 p$
b1000111011010001 m
b1000111011010001 &#
b1000111011010001 \#
b1000111011010001 i$
b1000111011010001 n$
b10 v$
b1110110100001 o$
b1000111011010001 m$
b0 w$
b100 m#
b100 l#
b10 k#
b0 l
b0 8$
b0 j$
b0 :$
b1110110100001 n
b1110110100001 7$
b1110110100001 h$
b1110110100001 9$
b1000 ;$
1"
1!"
#80
0"
0!"
#85
1-"
0/"
b10110100001 ~
b11011010001 }
1f"
b0 X$
b0 `$
b1000000000000100 +
b1000000000000100 X"
b1000000000000100 U$
b1000000000000100 ##
b0 w
b0 z$
b0 -%
b0 $%
b0 d
b0 }$
b0 .%
b0 %%
b0 D$
b0 L$
18
1N"
b100 -
b100 ("
b100 A$
b100 Q"
b11001010010000 j
b11001010010000 &"
b11001010010000 >$
b11001010010000 <"
b10000 {
b10000 $"
b10000 <$
b10000 R"
b11001010010000 c#
b100 h#
b100 f#
b1010010000 ^#
b10000 b#
b11 j#
b1000111011010001 h
b1000111011010001 7"
b1000111011010001 V#
b1000111011010001 d#
b11011010001 v
b11011010001 T#
b11011010001 0$
b11011010001 ]#
b10001 r
b10001 8"
b10001 U#
b10001 a#
1o
1_#
b1000 *
b1000 Y#
b1000 i#
b10001 .
b10001 )"
b10001 X#
b10001 g#
b110 0
b110 *"
b110 W#
b110 e#
1:#
12#
1F
1:
19#
b10000000 %"
0J
b1000000000000100 $$
b1000000000000100 "$
b1110110100001 g
b1110110100001 g"
b1110110100001 p#
b1110110100001 ~#
b10110100001 u
b10110100001 n#
b10110100001 *$
b10110100001 w#
b1 q
b1 h"
b1 o#
b1 {#
1p
1y#
b1 )
b1 s#
b1 %$
b1 ,
b1 Y"
b1 r#
b1 #$
b101 /
b101 Z"
b101 q#
b101 !$
19
1P#
b1 U"
1`
b0 f$
b0 d$
b1110110100001 g$
b1000111011010001 e$
1l$
bx u$
b1000111011010001 t$
1A
1r$
b0 k
b0 =#
b0 v#
b0 k$
b0 p$
b0 m
b0 &#
b0 \#
b0 i$
b0 n$
b1 w$
b10 v$
bx o$
b1000111011010001 m$
b1000000000000100 j"
b1000000000000100 i"
b100 :"
b100 9"
bx l
bx 8$
bx j$
bx :$
bx n
bx 7$
bx h$
bx 9$
b1010 ;$
b110 l#
b110 k#
b101 ($
b101 '$
1"
1!"
#90
0"
0!"
#95
0f"
0-"
b0 ~
b0 }
1M"
b100 P"
b10001 -
b10001 ("
b10001 A$
b10001 Q"
b10000 S"
b11001010010000 ="
b1000111011010001 j
b1000111011010001 &"
b1000111011010001 >$
b1000111011010001 <"
b10111 {
b10111 $"
b10111 <$
b10111 R"
b11001010010000 f
b11001010010000 ?$
b11001010010000 {$
b11001010010000 E$
16
1I$
b10000 y
b10000 =$
b10000 x$
b10000 C$
b1000000000000100000 (
b1000000000000100000 [#
b1000000000000100000 u#
b1000000000000100000 B$
b1000000000000100000 M$
17
1~"
b1000000000000100 "#
b1 +
b1 X"
b1 U$
b1 ##
b1110110100001 i
b1110110100001 V"
b1110110100001 R$
b1110110100001 l"
b110 z
b110 T"
b110 P$
b110 $#
1Q#
1>#
09
0P#
b0 U"
0`
b1110110100001 }#
1z#
b1 $$
b101 "$
b10110100001 x#
b1 |#
b1 &$
b0 g
b0 g"
b0 p#
b0 ~#
b0 u
b0 n#
b0 *$
b0 w#
b0 q
b0 h"
b0 o#
b0 {#
0p
0y#
b0 )
b0 s#
b0 %$
b0 ,
b0 Y"
b0 r#
b0 #$
b0 /
b0 Z"
b0 q#
b0 !$
14#
02#
0:
09#
b0 %"
0F
b1000111011010001 c#
1`#
b10001 h#
b110 f#
b11011010001 ^#
b10001 b#
b1000 j#
b0 h
b0 7"
b0 V#
b0 d#
b0 v
b0 T#
b0 0$
b0 ]#
b0 r
b0 8"
b0 U#
b0 a#
0o
0_#
b0 *
b0 Y#
b0 i#
b0 .
b0 )"
b0 X#
b0 g#
b0 0
b0 *"
b0 W#
b0 e#
b0 g$
b0 e$
b1000111011010001 u$
b10 v$
b1000111011010001 o$
1A
1r$
b1 w$
b10001 :"
b110 9"
b1 j"
b101 i"
b0 ($
b0 '$
b0 m#
b0 l#
b0 k#
b0 l
b0 8$
b0 j$
b0 :$
b0 n
b0 7$
b0 h$
b0 9$
1"
1!"
#100
0"
0!"
#105
b1110110100001 e
b1110110100001 S$
b1110110100001 |$
b1110110100001 Y$
15
1]$
b110 x
b110 Q$
b110 y$
b110 W$
b10100000000000001100 '
b10100000000000001100 Z#
b10100000000000001100 t#
b10100000000000001100 V$
b10100000000000001100 a$
1}"
07
0~"
b1 "#
b0 +
b0 X"
b0 U$
b0 ##
b110 %#
b1110110100001 m"
b0 i
b0 V"
b0 R$
b0 l"
b0 z
b0 T"
b0 P$
b0 $#
b11001010010000 D$
b1000111011010001 f
b1000111011010001 ?$
b1000111011010001 {$
b1000111011010001 E$
1H$
b1000000000000100000 L$
b10111 y
b10111 =$
b10111 x$
b10111 C$
b11000000000000101110 (
b11000000000000101110 [#
b11000000000000101110 u#
b11000000000000101110 B$
b11000000000000101110 M$
08
0N"
b10001 P"
b0 -
b0 ("
b0 A$
b0 Q"
b10111 S"
b1000111011010001 ="
b0 j
b0 &"
b0 >$
b0 <"
b0 {
b0 $"
b0 <$
b0 R"
b0 c#
0`#
b0 h#
b0 f#
b0 ^#
b0 b#
b0 j#
b1000000000000100 .
b1000000000000100 )"
b1000000000000100 X#
b1000000000000100 g#
b1000000000000100 0
b1000000000000100 *"
b1000000000000100 W#
b1000000000000100 e#
0:#
04#
b0 }#
0z#
b0 $$
b0 "$
b0 x#
b0 |#
b0 &$
b1000000000000100 ,
b1000000000000100 Y"
b1000000000000100 r#
b1000000000000100 #$
b1000000000000100 /
b1000000000000100 Z"
b1000000000000100 q#
b1000000000000100 !$
0Q#
0>#
b1110000000000000110000000000000010100000000000001000000000000000001000000000001000000000000000000110000000000000000 ""
b1110000000000000110000000000000010100000000000001000000000000000001000000000001000000000000000000110000000000000000 ,$
b1110000000000000110000000000000010100000000000001000000000000000001000000000001000000000000000000110000000000000000 2$
b0 j"
b0 i"
b1110000000000000110000000000000010100000000000001000000000000000001000000000001000000000000000000110000000000000000 &
b1110000000000000110000000000000010100000000000001000000000000000001000000000001000000000000000000110000000000000000 #%
b1110000000000000110000000000000010100000000000001000000000000000001000000000001000000000000000000110000000000000000 0%
b1110000000000000110000000000000010100000000000001000000000000000001000000000001000000000000000000110000000000000000 )%
b1000 ,%
b10000 *%
b0 :"
b0 9"
1"
1!"
#110
0"
0!"
#115
b1000 3%
b110 1%
0M"
b0 P"
b1000000000000100 -
b1000000000000100 ("
b1000000000000100 A$
b1000000000000100 Q"
b0 S"
b0 ="
b1000111011010001 D$
b0 f
b0 ?$
b0 {$
b0 E$
06
0I$
b11000000000000101110 L$
b0 y
b0 =$
b0 x$
b0 C$
b0 (
b0 [#
b0 u#
b0 B$
b0 M$
b110 w
b110 z$
b110 -%
b110 $%
b1110110100001 d
b1110110100001 }$
b1110110100001 .%
b1110110100001 %%
14
1'%
0}"
b0 "#
b1000000000000100 +
b1000000000000100 X"
b1000000000000100 U$
b1000000000000100 ##
b0 %#
b0 m"
b1110110100001 X$
b0 e
b0 S$
b0 |$
b0 Y$
1\$
05
0]$
b10100000000000001100 `$
b0 x
b0 Q$
b0 y$
b0 W$
b0 '
b0 Z#
b0 t#
b0 V$
b0 a$
b1000000000000100 $$
b1000000000000100 "$
b0 ,
b0 Y"
b0 r#
b0 #$
b0 /
b0 Z"
b0 q#
b0 !$
b1000000000000100 h#
b1000000000000100 f#
b0 .
b0 )"
b0 X#
b0 g#
b0 0
b0 *"
b0 W#
b0 e#
b1000000000000100 :"
b1000000000000100 9"
b1110000000000010111000000000000010100000000000001000000000000000001000000000001000000000000000000110000000000000000 &
b1110000000000010111000000000000010100000000000001000000000000000001000000000001000000000000000000110000000000000000 #%
b1110000000000010111000000000000010100000000000001000000000000000001000000000001000000000000000000110000000000000000 0%
b1110000000000010111000000000000010100000000000001000000000000000001000000000001000000000000000000110000000000000000 )%
b1000 ,%
b10111 *%
b1000000000000100 j"
b1000000000000100 i"
1"
1!"
#120
0"
0!"
#125
b0 X$
0\$
b0 `$
b1000000000000100 "#
b0 +
b0 X"
b0 U$
b0 ##
b0 w
b0 z$
b0 -%
b0 $%
b0 d
b0 }$
b0 .%
b0 %%
04
0'%
b0 D$
0H$
b0 L$
b1000000000000100 P"
b0 -
b0 ("
b0 A$
b0 Q"
b0 h#
b0 f#
b0 $$
b0 "$
b1000 3%
b1110000000000010111000000000000011000000000000001000000000000000001000000000001000000000000000000110000000000000000 ""
b1110000000000010111000000000000011000000000000001000000000000000001000000000001000000000000000000110000000000000000 ,$
b1110000000000010111000000000000011000000000000001000000000000000001000000000001000000000000000000110000000000000000 2$
b0 j"
b0 i"
b1110000000000010111000000000000011000000000000001000000000000000001000000000001000000000000000000110000000000000000 &
b1110000000000010111000000000000011000000000000001000000000000000001000000000001000000000000000000110000000000000000 #%
b1110000000000010111000000000000011000000000000001000000000000000001000000000001000000000000000000110000000000000000 0%
b1110000000000010111000000000000011000000000000001000000000000000001000000000001000000000000000000110000000000000000 )%
b0 :"
b0 9"
1"
1!"
#130
0"
0!"
#135
b0 P"
b0 "#
1"
1!"
#140
0"
0!"
#145
1"
1!"
#150
0"
0!"
#155
1"
1!"
#160
0"
0!"
#165
1"
1!"
#170
0"
0!"
#175
1"
1!"
#180
0"
0!"
#185
1"
1!"
#190
0"
0!"
#195
1"
1!"
#200
0"
0!"
#205
1"
1!"
#210
0"
0!"
#215
1"
1!"
#220
0"
0!"
#225
1"
1!"
#230
0"
0!"
#235
1"
1!"
#240
0"
0!"
#245
1"
1!"
#250
0"
0!"
#255
1"
1!"
#260
0"
0!"
#265
1"
1!"
#270
0"
0!"
#275
1"
1!"
#280
0"
0!"
#285
1"
1!"
#290
0"
0!"
#295
1"
1!"
#300
0"
0!"
#305
1"
1!"
#310
0"
0!"
#315
1"
1!"
#320
0"
0!"
#325
1"
1!"
#330
0"
0!"
#335
1"
1!"
#340
0"
0!"
#345
1"
1!"
#350
0"
0!"
#355
1"
1!"
#360
0"
0!"
#365
1"
1!"
#370
0"
0!"
#375
1"
1!"
#380
0"
0!"
#385
1"
1!"
#390
0"
0!"
#395
1"
1!"
#400
0"
0!"
#405
1"
1!"
#410
0"
0!"
#415
1"
1!"
#420
0"
0!"
#425
1"
1!"
#430
0"
0!"
#435
1"
1!"
#440
0"
0!"
#445
1"
1!"
#450
0"
0!"
#455
1"
1!"
#460
0"
0!"
#465
1"
1!"
#470
0"
0!"
#475
1"
1!"
#480
0"
0!"
#485
1"
1!"
#490
0"
0!"
#495
1"
1!"
#500
0"
0!"
#505
1"
1!"
#510
0"
0!"
#515
1"
1!"
#520
0"
0!"
#525
1"
1!"
#530
0"
0!"
#535
1"
1!"
#540
0"
0!"
#545
1"
1!"
#550
0"
0!"
#555
1"
1!"
#560
0"
0!"
#565
1"
1!"
#570
0"
0!"
#575
1"
1!"
#580
0"
0!"
#585
1"
1!"
#590
0"
0!"
#595
1"
1!"
#600
0"
0!"
#605
1"
1!"
#610
0"
0!"
#615
1"
1!"
#620
0"
0!"
#625
1"
1!"
#630
0"
0!"
#635
1"
1!"
#640
0"
0!"
#645
1"
1!"
#650
0"
0!"
#655
1"
1!"
#660
0"
0!"
#665
1"
1!"
#670
0"
0!"
#675
1"
1!"
#680
0"
0!"
#685
1"
1!"
#690
0"
0!"
#695
1"
1!"
#700
0"
0!"
#705
1"
1!"
#710
0"
0!"
#715
1"
1!"
#720
0"
0!"
#725
1"
1!"
#730
0"
0!"
#735
1"
1!"
#740
0"
0!"
#745
1"
1!"
#750
0"
0!"
#755
1"
1!"
#760
0"
0!"
#765
1"
1!"
#770
0"
0!"
#775
1"
1!"
#780
0"
0!"
#785
1"
1!"
#790
0"
0!"
#795
1"
1!"
#800
0"
0!"
#805
1"
1!"
#810
0"
0!"
#815
1"
1!"
#820
0"
0!"
#825
1"
1!"
#830
0"
0!"
#835
1"
1!"
#840
0"
0!"
#845
1"
1!"
#850
0"
0!"
#855
1"
1!"
#860
0"
0!"
#865
1"
1!"
#870
0"
0!"
#875
1"
1!"
#880
0"
0!"
#885
1"
1!"
#890
0"
0!"
#895
1"
1!"
#900
0"
0!"
#905
1"
1!"
#910
0"
0!"
#915
1"
1!"
#920
0"
0!"
#925
1"
1!"
#930
0"
0!"
#935
1"
1!"
#940
0"
0!"
#945
1"
1!"
#950
0"
0!"
#955
1"
1!"
#960
0"
0!"
#965
1"
1!"
#970
0"
0!"
#975
1"
1!"
#980
0"
0!"
#985
1"
1!"
#990
0"
0!"
#995
1"
1!"
#1000
0"
0!"
